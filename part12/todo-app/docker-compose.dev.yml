services:
  app:
    image: hello-front-dev
    build:
      context: ./todo-frontend/ # The context will pick this directory as the "build context"
      dockerfile: dev.Dockerfile # This will simply tell which dockerfile to read
    volumes:
      - ./todo-frontend/:/usr/src/app/ # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
    container_name: hello-front-dev # This will name the container hello-front-dev
    environment:
      - REACT_APP_BACKEND_URL=/api/
  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    depends_on:
      - app # wait for the frontend container to be started
      - server
  debug-helper:
    image: busybox
  server:
    build:
      context: ./todo-backend/
      dockerfile: dev.Dockerfile
    volumes:
      - type: bind
        source: ./todo-backend/
        target: /usr/src/app
    environment:
      - REDIS_URL=redis://redis:6379
      - MONGO_URL=mongodb://the_username:the_password@mongo:27017/the_database
    container_name: hello-backend-dev
  mongo:
    image: mongo
    ports:
      - 3456:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
  redis:
    image: redis:7.0.11-bullseye
    ports:
      - 6379:6379
    command: ['redis-server', '--appendonly', 'yes']
    volumes:
      - type: volume
        source: redisVolume
        target: /data

volumes:
  redisVolume: